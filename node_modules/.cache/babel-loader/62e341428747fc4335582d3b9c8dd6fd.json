{"ast":null,"code":"var _jsxFileName = \"/Users/aschnall/Documents/Portfolio/movies-hooks/src/components/MovieCard.js\";\nimport React, { useState, useEffect } from 'react';\nimport './MovieCard.css';\nimport defaultPoster from '../assets/default-poster.jpg';\nimport { KEY } from '../apis/tmdb.js';\n\nconst MovieCard = ({\n  poster,\n  title,\n  synopsis,\n  year,\n  id,\n  rating\n}) => {\n  const [stars, setStars] = useState('');\n  const [trailerKey, setTrailerKey] = useState('');\n  const [director, setDirector] = useState(''); // useEffect(() => {\n  // \tcastSearch(id);\n  // \tvideoSearch(id);\n  // }, [id])\n\n  const castSearch = async id => {\n    let credits = await fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}`);\n    credits = await credits.json();\n    let stars = credits.cast.slice(0, 4);\n    stars = stars.map(obj => obj.name).join(', ');\n    let director = {};\n\n    for (let i = 0; i < credits.crew.length; i++) {\n      if (credits.crew[i].job === 'Director' && credits.crew[i].department === 'Directing') {\n        director = credits.crew[i];\n        break;\n      }\n    }\n\n    setStars(stars);\n    setDirector(director.name);\n  };\n\n  const videoSearch = async id => {\n    let video = await fetch(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=${KEY}`);\n    video = await video.json();\n\n    if (video.results[0]) {\n      setTrailerKey(video.results[0].key);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"poster\",\n    className: \"three wide column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"ui image\",\n    src: poster ? `http://image.tmdb.org/t/p/original/${poster}` : defaultPoster,\n    alt: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"thirteen wide column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }\n  }, title, \" \", year ? `(${year})` : ''), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }\n  }, synopsis), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 8\n    }\n  }, stars ? `Starring: ${stars}` : ''), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }\n  }, director ? `Directed by: ${director}` : ''), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 8\n    }\n  }, rating > 0 ? `User Score: ${rating * 10}%` : ''), trailerKey ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"description\",\n    style: {\n      margin: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 71\n    }\n  }, \"Trailer\")) : '', trailerKey ? /*#__PURE__*/React.createElement(\"iframe\", {\n    title: \"trailer\",\n    className: \"description\",\n    src: `https://www.youtube.com/embed/${trailerKey}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 22\n    }\n  }) : '')))));\n}; // const MovieCard = ({title, poster, synopsis}) => {\n// \treturn  (\n// \t\t<div className=\"item\">\n// \t\t\t<div className=\"ui grid\">\n// \t\t\t\t<div className=\"ui row\">\n// \t\t\t\t\t<div className=\"three wide column\">\n// \t\t\t\t\t\t<img \n// \t\t\t\t\t\t\tclassName=\"ui image\"\n// \t\t\t\t\t\t\tsrc={poster ? `http://image.tmdb.org/t/p/original/${poster}` : defaultPoster }\n// \t\t\t\t\t\t\talt={title}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"thirteen wide column\">\n// \t\t\t\t\t\t<div className=\"content\">\n// \t\t\t\t\t\t\t<h2 className=\"header\">{title}</h2>\n// \t\t\t\t\t\t\t<p className=\"description\">{synopsis}</p>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</div>\n// \t);\n// }\n\n\nexport default MovieCard;","map":{"version":3,"sources":["/Users/aschnall/Documents/Portfolio/movies-hooks/src/components/MovieCard.js"],"names":["React","useState","useEffect","defaultPoster","KEY","MovieCard","poster","title","synopsis","year","id","rating","stars","setStars","trailerKey","setTrailerKey","director","setDirector","castSearch","credits","fetch","json","cast","slice","map","obj","name","join","i","crew","length","job","department","videoSearch","video","results","key","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './MovieCard.css';\nimport defaultPoster from '../assets/default-poster.jpg'\nimport { KEY } from '../apis/tmdb.js';\n\nconst MovieCard = ({poster, title, synopsis, year, id, rating}) => {\n\tconst [stars, setStars] = useState('');\n\tconst [trailerKey, setTrailerKey] = useState('');\n\tconst [director, setDirector] = useState('');\n\n\t// useEffect(() => {\n\t// \tcastSearch(id);\n\t// \tvideoSearch(id);\n\t// }, [id])\n\n\tconst castSearch = async id => {\n\t\tlet credits = await fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}`);\n\t\tcredits = await credits.json();\n\t\tlet stars = credits.cast.slice(0,4);\n\t\tstars = stars.map(obj => obj.name).join(', ');\n\t\tlet director = {};\n\t\tfor (let i = 0; i < credits.crew.length; i++) {\n\t\t\tif (credits.crew[i].job==='Director' && credits.crew[i].department==='Directing') {\n\t\t\t\tdirector=credits.crew[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tsetStars(stars);\n\t\tsetDirector(director.name);\n\t}\n\n\tconst videoSearch = async id => {\n\t\tlet video = await fetch(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=${KEY}`);\n\t\tvideo = await video.json();\n\t\tif (video.results[0]) {\n\t\t\tsetTrailerKey(video.results[0].key);\n\t\t}\n\t}\n\treturn  (\n\t\t<div className=\"item\">\n\t\t\t<div className=\"ui grid\">\n\t\t\t\t<div className=\"ui row\">\n\t\t\t\t\t<div id=\"poster\" className=\"three wide column\">\n\t\t\t\t\t\t<img \n\t\t\t\t\t\t\tclassName=\"ui image\"\n\t\t\t\t\t\t\tsrc={poster ? `http://image.tmdb.org/t/p/original/${poster}` : defaultPoster }\n\t\t\t\t\t\t\talt={title}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"thirteen wide column\">\n\t\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t\t<h2 className=\"header\">{title} {year ?  `(${year})` : ''}</h2>\n\t\t\t\t\t\t\t<p className=\"description\">{synopsis}</p>\n\t\t\t\t\t\t\t<p className=\"description\">{stars ? `Starring: ${stars}` : ''}</p>\n\t\t\t\t\t\t\t<p className=\"description\">{director ? `Directed by: ${director}` : ''}</p>\n\t\t\t\t\t\t\t<p className=\"description\">{rating > 0 ? `User Score: ${rating*10}%` : ''}</p>\n\t\t\t\t\t\t\t{trailerKey ? <p className=\"description\" style={{margin: '0'}}><strong>Trailer</strong></p> : ''}\n\t\t\t\t\t\t\t{trailerKey ? <iframe title=\"trailer\" className=\"description\" src={`https://www.youtube.com/embed/${trailerKey}`}/> : ''}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n\n// const MovieCard = ({title, poster, synopsis}) => {\n// \treturn  (\n// \t\t<div className=\"item\">\n// \t\t\t<div className=\"ui grid\">\n// \t\t\t\t<div className=\"ui row\">\n// \t\t\t\t\t<div className=\"three wide column\">\n// \t\t\t\t\t\t<img \n// \t\t\t\t\t\t\tclassName=\"ui image\"\n// \t\t\t\t\t\t\tsrc={poster ? `http://image.tmdb.org/t/p/original/${poster}` : defaultPoster }\n// \t\t\t\t\t\t\talt={title}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"thirteen wide column\">\n// \t\t\t\t\t\t<div className=\"content\">\n// \t\t\t\t\t\t\t<h2 className=\"header\">{title}</h2>\n// \t\t\t\t\t\t\t<p className=\"description\">{synopsis}</p>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</div>\n// \t);\n// }\n\nexport default MovieCard;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}