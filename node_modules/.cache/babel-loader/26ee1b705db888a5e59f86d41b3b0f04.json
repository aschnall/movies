{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { KEY } from '../apis/tmdb.js';\n\nconst useCast = id => {\n  const [stars, setStars] = useState('');\n  const [director, setDirector] = useState('');\n  useEffect(() => {\n    castSearch(id);\n  }, [id]);\n\n  const castSearch = async id => {\n    let credits = await fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}`);\n    credits = await credits.json();\n    let stars = credits.cast.slice(0, 4);\n    stars = stars.map(obj => obj.name).join(', ');\n    let director = {};\n\n    for (let i = 0; i < credits.crew.length; i++) {\n      if (credits.crew[i].job === 'Director' && credits.crew[i].department === 'Directing') {\n        director = credits.crew[i];\n        break;\n      }\n    }\n\n    setStars(stars);\n    setDirector(director.name);\n  };\n\n  return [stars, director];\n};\n\nexport default useCast;","map":{"version":3,"sources":["/Users/aschnall/Documents/Portfolio/movies-hooks/src/hooks/useCast.js"],"names":["useState","useEffect","KEY","useCast","id","stars","setStars","director","setDirector","castSearch","credits","fetch","json","cast","slice","map","obj","name","join","i","crew","length","job","department"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAGA,MAAMC,OAAO,GAAGC,EAAE,IAAI;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACfQ,IAAAA,UAAU,CAACL,EAAD,CAAV;AACA,GAFQ,EAEN,CAACA,EAAD,CAFM,CAAT;;AAIA,QAAMK,UAAU,GAAG,MAAML,EAAN,IAAY;AAC9B,QAAIM,OAAO,GAAG,MAAMC,KAAK,CAAE,sCAAqCP,EAAG,oBAAmBF,GAAI,EAAjE,CAAzB;AACAQ,IAAAA,OAAO,GAAG,MAAMA,OAAO,CAACE,IAAR,EAAhB;AACA,QAAIP,KAAK,GAAGK,OAAO,CAACG,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAqB,CAArB,CAAZ;AACAT,IAAAA,KAAK,GAAGA,KAAK,CAACU,GAAN,CAAUC,GAAG,IAAIA,GAAG,CAACC,IAArB,EAA2BC,IAA3B,CAAgC,IAAhC,CAAR;AACA,QAAIX,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,OAAO,CAACU,IAAR,CAAaC,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAC7C,UAAIT,OAAO,CAACU,IAAR,CAAaD,CAAb,EAAgBG,GAAhB,KAAsB,UAAtB,IAAoCZ,OAAO,CAACU,IAAR,CAAaD,CAAb,EAAgBI,UAAhB,KAA6B,WAArE,EAAkF;AACjFhB,QAAAA,QAAQ,GAACG,OAAO,CAACU,IAAR,CAAaD,CAAb,CAAT;AACA;AACA;AACD;;AACDb,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,IAAAA,WAAW,CAACD,QAAQ,CAACU,IAAV,CAAX;AACA,GAdD;;AAeA,SAAO,CAACZ,KAAD,EAAQE,QAAR,CAAP;AACA,CAxBD;;AA0BA,eAAeJ,OAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { KEY } from '../apis/tmdb.js';\n\n\nconst useCast = id => {\n\tconst [stars, setStars] = useState('');\n\tconst [director, setDirector] = useState('');\n\n\tuseEffect(() => {\n\t\tcastSearch(id);\n\t}, [id])\n\n\tconst castSearch = async id => {\n\t\tlet credits = await fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}`);\n\t\tcredits = await credits.json();\n\t\tlet stars = credits.cast.slice(0,4);\n\t\tstars = stars.map(obj => obj.name).join(', ');\n\t\tlet director = {};\n\t\tfor (let i = 0; i < credits.crew.length; i++) {\n\t\t\tif (credits.crew[i].job==='Director' && credits.crew[i].department==='Directing') {\n\t\t\t\tdirector=credits.crew[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tsetStars(stars);\n\t\tsetDirector(director.name);\n\t}\n\treturn [stars, director];\n}\n\nexport default useCast;"]},"metadata":{},"sourceType":"module"}